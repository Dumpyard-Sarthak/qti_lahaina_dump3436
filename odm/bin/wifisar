#!/vendor/bin/sh

SAR_EXEC_FILE="/vendor/bin/vendor_cmd_tool"
SAR_CFG_FILE="/odm/etc/wifi/sar-vendor-cmd.xml"

WIFI_SAR_DISABLE_CMD_BODY="--ENABLE 5 --NUM_SPECS 0 --END_CMD"

# temp static value, should get from sysfs based on STA/SAP on/off status
# for android O, interface of SAP is softap0
get_wifi_iface() {
	echo "wlan0"
}

build_cmd_header() {
	iface="$(get_wifi_iface)"
	echo "-f $SAR_CFG_FILE -i $iface --START_CMD --SAR_SET"
}

build_cmd_body() {

	[ "$#" -ne "4" ] && return

	echo "--ENABLE 6 --NUM_SPECS 4 --SAR_SPEC 
	--NESTED_AUTO --BAND 0 --CHAIN 0 --POW $1 --END_ATTR
	--NESTED_AUTO --BAND 0 --CHAIN 1 --POW $2 --END_ATTR
	--NESTED_AUTO --BAND 1 --CHAIN 0 --POW $3 --END_ATTR
	--NESTED_AUTO --BAND 1 --CHAIN 1 --POW $4 --END_ATTR
	--END_ATTR --END_CMD"
}

build_cmd() {
	cHdr="$(build_cmd_header)"
	cBody="$(build_cmd_body $1 $2 $3 $4)"

	echo "$cHdr $cBody"
}

apply_sar() {
	cmd="$(build_cmd $1 $2 $3 $4)"
	echo "cmd=$cmd"

	$SAR_EXEC_FILE $cmd
}

get_sar_pwr() {
	idx="$1"
	wifi2genable="$2"
	wifi5gband="$3"
	wifi5gchain0key="5G_ch0_$wifi5gband"
	wifi5gchain1key="5G_ch1_$wifi5gband"

	if [ "$idx" -eq "0" ]; then
		return
	fi

	prj_sar_cfg_file="/odm/etc/wifi/wifisar.cfg"

	if [ ! -f "$prj_sar_cfg_file" ]; then
		#echo "sar config file:$prj_sar_cfg_file not exist!"
		echo "80 80 80 80"
		return
	fi

	wifi2gch0str=$(cat $prj_sar_cfg_file | awk -F ";" '{
	if ($1 == "idx:""'$idx'") {
		if ("'$wifi2genable'" == "0")
			print "[2G4_ch0, 80]"
		else
			print $2
	}}')

	wifi2gch1str=$(cat $prj_sar_cfg_file | awk -F ";" '{
	if ($1 == "idx:""'$idx'") {
		if ("'$wifi2genable'" == "0")
			print "[2G4_ch1, 80]"
		else
			print $3
	}}')

	wifi5gch0str=$(cat $prj_sar_cfg_file | awk -F ";" '{
	if ($1 == "idx:""'$idx'") {
		if ("'$wifi5gchain0key'" == "5G_ch0_0")
			print "[5G_ch0_0, 80]"
		else if ("'$wifi5gchain0key'" == "5G_ch0_1")
			print $4
		else if ("'$wifi5gchain0key'" == "5G_ch0_2")
			print $6
		else if ("'$wifi5gchain0key'" == "5G_ch0_3")
			print $8
		else if ("'$wifi5gchain0key'" == "5G_ch0_4")
			print $10
	}}')

	wifi5gch1str=$(cat $prj_sar_cfg_file | awk -F ";" '{
	if ($1 == "idx:""'$idx'") {
			if ("'$wifi5gchain1key'" == "5G_ch1_0")
					print "[5G_ch1_0, 80]"
			else if ("'$wifi5gchain1key'" == "5G_ch1_1")
					print $5
			else if ("'$wifi5gchain1key'" == "5G_ch1_2")
					print $7
			else if ("'$wifi5gchain1key'" == "5G_ch1_3")
					print $9
			else if ("'$wifi5gchain1key'" == "5G_ch1_4")
					print $11
	}}')

	pwr2gch0=$(echo $wifi2gch0str | awk -F "[][,]" '{print $(NF-1)}')
	pwr5gch0=$(echo $wifi5gch0str | awk -F "[][,]" '{print $(NF-1)}')
	pwr2gch1=$(echo $wifi2gch1str | awk -F "[][,]" '{print $(NF-1)}')
	pwr5gch1=$(echo $wifi5gch1str | awk -F "[][,]" '{print $(NF-1)}')

	pwr2gch0=$(echo $pwr2gch0 | tr -d [:space:])
	pwr5gch0=$(echo $pwr5gch0 | tr -d [:space:])
	pwr2gch1=$(echo $pwr2gch1 | tr -d [:space:])
	pwr5gch1=$(echo $pwr5gch1 | tr -d [:space:])

	[ -z "$pwr2gch0" ] && pwr2gch0="80"
	[ -z "$pwr5gch0" ] && pwr5gch0="80"
	[ -z "$pwr2gch1" ] && pwr2gch1="80"
	[ -z "$pwr5gch1" ] && pwr5gch1="80"

	echo "$pwr2gch0" "$pwr2gch1" "$pwr5gch0" "$pwr5gch1"
}

disable_wifi_sar() {
	cmd_hdr="$(build_cmd_header)"
	cmd_body="$WIFI_SAR_DISABLE_CMD_BODY"

	cmd="$cmd_hdr $cmd_body"
	echo "cmd=$cmd"

	$SAR_EXEC_FILE $cmd
}

# Note:
# 0. sarIdx:wifi 2.4G enable(0/1):wifi 5G band(0-4).
sar_cmd=$(getprop "sys.oplus.wlan.sar_idx" "")

# 1. get each parameter
cmd_array=(${sar_cmd//:/ })
array_len=${#cmd_array[@]}
[ "$array_len" -ne "3" ] && echo "Invalid sar cmd!" && return

sarIdx=${cmd_array[0]}
wifi2g=${cmd_array[1]}
wifi5g=${cmd_array[2]}

# 2. get backoff power from sarIdx(note wifi5G B1/B2/B3/B4 have different power value)
pwr=$(get_sar_pwr "$sarIdx" "$wifi2g" "$wifi5g")
echo "pwr=$pwr"
pwr_array=(${pwr// / })
arr_len=${#pwr_array[@]}
[ "$arr_len" -ne "4" ] && echo "Invalid power array" && disable_wifi_sar && return

pwr2gch0=${pwr_array[0]}
pwr2gch1=${pwr_array[1]}
pwr5gch0=${pwr_array[2]}
pwr5gch1=${pwr_array[3]}


# 3. apply backoff power
apply_sar "$pwr2gch0" "$pwr2gch1" "$pwr5gch0" "$pwr5gch1"
